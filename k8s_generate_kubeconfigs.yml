---
- hosts: k8s_worker
  serial: 1
  tasks:
      - name: k8s_generate_kubeconfigs | generate kube-proxy kubeconfig
        shell: >
            kubectl config set-cluster {{k8s.cluster_name}}
            --certificate-authority=ca.pem
            --embed-certs=true
            --server=https://{{groups['k8s_controller'][0]}}:6443
            --kubeconfig={{inventory_hostname}}.kubeconfig

            kubectl config set-credentials system:node:{{inventory_hostname}}
            --client-certificate={{inventory_hostname}}.pem
            --client-key={{inventory_hostname}}-key.pem
            --embed-certs=true
            --kubeconfig={{inventory_hostname}}.kubeconfig

            kubectl config set-context default
            --cluster={{k8s.cluster_name}}
            --user=system:node:{{inventory_hostname}}
            --kubeconfig={{inventory_hostname}}.kubeconfig

            kubectl config use-context default --kubeconfig={{inventory_hostname}}.kubeconfig
        args:
            chdir: "{{k8s.ca_config.cert_dir}}"
            creates: "{{inventory_hostname}}.kubeconfig"
        delegate_to: localhost

- hosts: localhost
  connection: local
  tasks:
      - name: k8s_generate_kubeconfigs | generate kube-proxy kubeconfig
        shell: >
            kubectl config set-cluster {{k8s.cluster_name}}
            --certificate-authority=ca.pem
            --embed-certs=true
            --server=https://{{groups['k8s_controller'][0]}}:6443
            --kubeconfig=kube-proxy.kubeconfig

            kubectl config set-credentials kube-proxy
            --client-certificate=kube-proxy.pem
            --client-key=kube-proxy-key.pem
            --embed-certs=true
            --kubeconfig=kube-proxy.kubeconfig

            kubectl config set-context default
            --cluster={{k8s.cluster_name}}
            --user=kube-proxy
            --kubeconfig=kube-proxy.kubeconfig

            kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
        args:
            chdir: "{{k8s.ca_config.cert_dir}}"
            creates: "kube-proxy.kubeconfig"
      - name: k8s_generate_kubeconfigs | generate admin config
        shell: >
            kubectl config set-cluster {{k8s.cluster_name}}
            --certificate-authority=ca.pem
            --embed-certs=true
            --server=https://{{groups['k8s_controller'][0]}}:6443

            kubectl config set-credentials admin
            --client-certificate=admin.pem
            --client-key=admin-key.pem

            kubectl config set-context {{k8s.cluster_name}}
            --cluster={{k8s.cluster_name}}
            --user=admin

            kubectl config use-context {{k8s.cluster_name}}
        args:
            chdir: "{{k8s.ca_config.cert_dir}}"
            #creates: "{{ansible_env.HOME}}/.kube/config"
        tags:
            - admin_kubeconfig

