---
- hosts: localhost
  connection: local
  tasks:
      - name: k8s_prereqs | get cfssl
        get_url:
            url: "{{item.url}}"
            dest: "/usr/local/bin/{{item.filename}}"
            mode: 0755
        with_items:
            - url: "https://pkg.cfssl.org/R1.2/cfssl_{{k8s.os[ansible_system]}}-{{k8s.arch[ansible_architecture]}}"
              filename: "cfssl"
            - url: "https://pkg.cfssl.org/R1.2/cfssljson_{{k8s.os[ansible_system]}}-{{k8s.arch[ansible_architecture]}}"
              filename: "cfssljson"
        become: true
        tags:
            - "cfssl"
      - name: k8s_prereqs | install kubectl
        get_url:
            url: "https://storage.googleapis.com/kubernetes-release/release/v{{k8s.version}}/bin/{{k8s.os[ansible_system]}}/{{k8s.arch[ansible_architecture]}}/kubectl"
            dest: "/usr/local/bin/"
            mode: 0755
        become: true
        tags:
            - "kubectl"

- hosts: jeepi
  become: true
  pre_tasks:
      - name: update packages
        apt:
            update_cache: true
        when: ansible_pkg_mgr == "apt"
  tasks:
      - name: install tcpdump
        package:
            name: tcpdump
            state: latest
        tags:
            - tcpdump
      - name: install conntrack
        package:
            name: conntrack
            state: latest
        tags:
            - conntrack
      - name: k8s_prereqs | create hosts
        template:
            src: hosts_internal.j2
            dest: "/etc/hosts"
      - name: k8s_prereqs | Remove swapfile from fstab
        mount:
            name: swap
            fstype: swap
            state: absent
      - name: k8s_prereqs | disable swap
        command: swapoff -a
        when: ansible_swaptotal_mb > 0
      - name: disable dphys-swap
        service:
            name: dphys-swapfile
            enabled: false
            state: stopped
      - name: enable docker
        service:
            name: docker
            state: started
            enabled: true
      - name: fix forwarding policy set by docker
        iptables:
            chain: FORWARD
            policy: ACCEPT
        tags:
            - docker
            - iptables
      - name: k8s_prereqs | add cgroup config to boot command
        lineinfile:
            path: /boot/cmdline.txt
            regexp: "^(.*(?<! cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1)$)"
            backrefs: true
            line: '\1 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1'
